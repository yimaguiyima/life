()撤销操作
git reset HEAD 如果后面什么都不跟的话 就是上一次add 里面的全部撤销了 
git reset HEAD XXX/XXX/XXX.java 就是对某个文件进行撤销了

git commit -m "git commit use"
git commit --amend //merge last time
()删除操作
如果是文件夹：git rm -r --cached 文件夹名
如果是文件：git rm --cached 文件名
()add gitignore 
touch .gitignore
()scp -P 8947 -r  xxx@192.168.0.205:/home/wuxuhua/disk2/39O/COMMON/.git ./
git clone
git clone 源仓库 目标仓库
git remote add origin git@github.com:your name/repository name.git // 将本地仓库和你自己的远程仓库关联起来，origin是仓库的名字
git checkout -f;
git reset HEAD 回退到当前版本(git add 错误,不修改工作区)
git reset --hard HEAD (修改工作区代码)
git revert -n commitid // 反做;

()
1. 代码规范
（1）注释规范 redmine [bugid] [name] [key]  [date]
（2）commit规范 test [bugid] [key]  [name]

2.redmine规格
 （1）. fixed 
（2）. 不需要修改，与测试沟通后
ongoing 指给组长

()代码提交流程
git pull origin brname#Redmine 13420 wuxuhua modified for otg menu remove.2020-02-25 begin

git diff -w
git add path
git status

 -m "@{test bugid desc}.name"
()common
git commit -m "@{[should]test bugid desc}.name"
git log
git push origin HEAD:refs/for/branches

cherry pick dev_France dev_France_Orange
()分支名被修改（dev_France_Orange）
git fetch -p
git checkout dev_France_Orange

mk文件不能在PRODUCT_PACKAGES中间进行注释
PRODUCT_PACKAGES += \
    AssistantGo \
    Chrome \
    DuoGo \
    GalleryGo \
    GMailGo \
    GoogleSearchGo \
    LatinImeGoogleGo \
    MapsGo \
    NavGo \
    YouTubeGo
git diff 重点对比不是自己修改的代码，要维护原装
（）审核失败流程
 aboned, 
 git reset …forward，
 git add xx.java xxx.java 
git commit --amend
 git commit --amend --no-edit

（）对比修改
git diff -w filename
git status ./ 

（）恢复之前的修改
git checkout path
git checkout -f 放弃本地修改，强制检出代码
git checkout .  #本地所有的修改，没有提交的，都返回到原来的状态
（）撤销 git add
git reset HEAD 如果后面什么都不跟的话 就是上一次add 里面的全部撤销了 
git reset HEAD XXX/XXX/XXX.java 就是对某个文件进行撤销了

()切换分支
git br
git br -a
git checkout brname
git pull origin brname

有时checkout 失败，提示一些修改会被覆盖，要commit这时可以
git checkout -f

git show <commit-hashId> filename 可以显示某次提交的某个内容的修改信息
 3.git pull 发生冲突解决办法
 　1.git stash (把本地冲突的代码隐藏)

　　2.git pull 

　　3.git stash pop (将隐藏的和pull 下来的合并，打开文件，解决冲突)
分支名发生变化(dev_Orange变dev_France_Orange)
（）同步分支
git fetch -p
git checkout dev_France_Orange
git pull
命令行解释--prune -p -- remove any remote tracking branches that no longer exist remotely
英文意思：删除不存在的远程跟踪分支, 获取远程仓库的新分支以及删除远程仓库已删除的分支

()git reflog
git revert
git commit -m "@{[should]test 15497 [Interface display] Black screen flashes before entering the standby interface}zhangmengchun"

git commit -m "@{test 17736 [Interface display] The boot wizard interface will load the blank page to the next page before setting the lock screen to the next page.}zhangmengchun"
1.使用git
本地新建仓库，进行初始化关联远程仓库。cd d:/test
 mkdir
git init
用ls -ah命令,可以看到git目录
git status: file status
git add filename(.txt)
git add file2.txt file3.txt
git add gitTutorial.txt
git add .
git status
git commit -m "zhushi"
git commit -a -m ""
git diff fileuse：compare file and file in repositry
git diff -w file
git log 
git log --pretty=oneline
(2)github 
explore 探索，glst代码片段，news feed订阅的通知，issues新建的问题（created、assigned、mentioned）
star 表示持续关注的，fork 别人的项目
2.管理修改
版本回退与管理修改
git reset --hard HEAD^:back,往上 100 个版本写 100 个^比较容易数不过来，所以写成 HEAD~100
git reset --hard banbenhao
git checkout --filename :回到还没有提交的状态。
git checkout -- file命令中的--很重要，没有--，就变成了“创建一个新分支”的命令。
穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。
要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。
3.git远程配置
（1）ssh-keygen -t rsa -C "youremail@example.com"，然后回车，输入密码，确认密码
(2)eval "$(ssh-agent -s)"
(3)ssh-add ~/.ssh/id_rsa,回车然后输入密码。
（4）登陆 GitHub，打开“Account settings”，“SSH Keys”页面，填上任意 Title，在 Key 文本框里粘贴id_rsa.pub文件的内容。
ssh -T urls,然后输入 yes
git log --oneline --decorate --graph --all
git merge origin/master
git remote add origin https://github.com/yimaguiyima/test.git(add 关联remote 仓库)
git remote -v(查看远程版本)
git remote show origin
git remote rm
git remote add <主机名> <网址>
git remote rename <原主机名> <新主机名>
4.项目管理参考公司策略
featuer:为新增功能，合并完成后将分支合并到develop上去，给测试人员。
master分支，develop分支没有问题迁移到master分支，版本号x.x.x第一位代表第几年
第二位代表哪个月，哪一周.
刚开始因为功能少，可以直接在master分支上进行开发。带到新增功能可以从master上拉去分支；
git push -u origin master 用于将本地分支的更新，推送到远程主机
git pull origin <分支名称（默认master）> 拉下服务器代码
git fetch <远程主机名> <分支名>
[rejected] failed to push to some refs,git push origin master -f
git branch命令的-r选项，可以用来查看远程分支，-a选项查看所有分支。
 git checkout -b newBrach origin/master
 git merge origin/master或者 git rebase origin/master
 git pull <远程主机名> <远程分支名>:<本地分支名>
git pull --rebase <远程主机名> <远程分支名>:<本地分支名>
git远程操作http://www.ruanyifeng.com/blog/2014/06/git_remote.html


